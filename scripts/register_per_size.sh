
#!/bin/bash


# Help message function
display_help() {
    echo "Usage: $0 [options]"
    echo "Options:"
    echo "  -i <directory>   Index location containing the kmindex files"
    echo "  -f <file>        File name containing the list or sublist generated by scripts/path_maker.py"
    echo "                   This file may be generated for instance with sudo python3 scripts/path_maker.py /tmp/data/METATRANSCRIPTOMIC_INV /tmp/data/METATRANSCRIPTOMIC_INV > list_METATRANSCRIPTOMIC_INV.txt"
    echo "  -h               Display this help message"
    echo "Example: $0 -l GENOMICSINGLECELL -s VRL"
    echo "Note, the file list_GENOMICSINGLECELL_INV.txt shoud exist in this case"
    echo "Generated with sudo python3 scripts/path_maker.py /tmp/data/METATRANSCRIPTOMIC_INV /tmp/data/METATRANSCRIPTOMIC_INV > list_METATRANSCRIPTOMIC_INV.txt"
    exit 1
}

list_file=""

# Parse command-line arguments
while getopts ":rf:i:h" opt; do
  case ${opt} in
    i )
      index="$OPTARG"
      ;;
    f )
      list_file="$OPTARG"
      ;;
    h )
      display_help
      ;;
    \? )
      echo "Invalid option: $OPTARG" 1>&2
      display_help
      ;;
    : )
      echo "Option -$OPTARG requires an argument." 1>&2
      display_help
      ;;
  esac
done
shift $((OPTIND -1))

# Check if library and superkingdom are provided
if [ -z "$index" ] || [ -z "$superkingdom" ] || [ -z "$list_file" ]; then
  echo "Error: 'library' and 'superkingdom' and 'list_file' options are mandatory." >&2
  display_help
fi
# list_file="list_${library}_${superkingdom}.txt"
# Check if library and superkingdom are provided
if [ ! -f $list_file ]; then
  echo "Error: file ${list_file} doest not exists." >&2
  display_help
fi

while IFS= read -r line
do
  idx=$(echo $line | cut -f1 -d' ') # eg 0_21
  path=$(echo $line | cut -f2 -d' ') # eg ${index}/1d/d73cf36072bfd769bad77398a4af7d
  log_size=$(echo $idx | cut -f2 -d'_') # eg 21
  echo "registering " $idx $path/$idx " in " ${log_size}
  cmd="kmindex register -i ${index}/index_${library}_${superkingdom}_${log_size} -n $idx -p $path/$idx/"
  echo $cmd
  $cmd 
  
done < ${list_file}

